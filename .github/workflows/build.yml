on:
  pull_request:

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: SSH into EC2 instance and deploy
        uses: easingthemes/ssh-deploy@v5.0.0
        with:
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{secrets.AWS_REGION}}
          SCRIPT_AFTER: |
            ./script
            echo "AWS CLI version: $(aws --version)"
            echo "Docker version: $(sudo docker --version)"
            echo "Stop the current running container if exist..."
            sudo docker stop $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG || true
            echo "Remove the previous container..."
            sudo docker rm $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG || true
            echo "AWS credentials set...."
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_REGION=${AWS_REGION}

            echo "Logging in to ECR...."
            aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin 817722091681.dkr.ecr.af-south-1.amazonaws.com
            echo "Logged in successful..."
            echo "Pulling  image from ECR..."
            echo $($ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG)
            echo "Docker pull command: sudo docker pull \"${{ secrets.AWS_REGISTRY_URL }}/${{ secrets.REPOSITORY_NAME }}:${{ IMAGE_TAG }}\""
            echo "Docker pull completed..."
        
            
            
